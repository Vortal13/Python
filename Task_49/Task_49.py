# Задача No49.
# Планеты вращаются вокруг звезд по эллиптическим орбитам. Назовем самой далекой планетой ту, орбита которой имеет самую большую площадь. 
# Напишите функцию find_farthest_orbit(list_of_orbits), которая среди списка орбит планет найдет ту, по которой вращается самая далекая 
# планета. Круговые орбиты не учитывайте: вы знаете, что у вашей звезды таких планет нет, зато искусственные спутники были были 
# запущены на круговые орбиты. Результатом функции должен быть кортеж, содержащий длины полуосей эллипса орбиты самой далекой планеты. 
# Каждая орбита представляет из себя кортеж из пары чисел - полуосей ее эллипса. 
# Площадь эллипса вычисляется по формуле S = pi*a*b, где a и b - длины полуосей эллипса. 
# При решении задачи используйте списочные выражения. Подсказка: проще всего будет найти эллипс в два шага: 
# сначала вычислить самую большую площадь эллипса, а затем найти и сам эллипс, имеющий такую площадь. 
# Гарантируется, что самая далекая планета ровно одна
# Пример ввода и вывода данных представлены на следующем слайде
# orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]

# def find_farthest_orbit(list_of_orbits):
#     filter_orbit = list(filter(lambda x: x[0] != x[1], list_of_orbits ))
#     square  =  list(map(lambda x : 3.14 * x[0] * x[1], filter_orbit))
#     orbit_dict = dict(zip(square, filter_orbit))
#     max_orbit = max(orbit_dict.keys())
#     return orbit_dict.get(max_orbit)

# orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]

# print (find_farthest_orbit(orbits))

# Решение 2
# orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)]
# print(max(orbits, key= lambda x  : x[0] * x[1]*(x[0]!=x[1])))


# Доп. задача
# Вводится список целых чисел в одну строчку через пробел. Необходимо оставить в нем только двузначные числа. 
# Реализовать программу с использованием функции filter. Результат отобразить на экране в виде последовательности оставшихся
# чисел в одну строчку через пробел.

#  пример  - 8 11 0 -23 140 1  вывод - (11 -23)
list_1 = [-8, 11, 0, -23, 140, 1]
list_2 = list(filter(lambda x: 9<abs(x)<100, list_1))
print (list_2)

# Решение 2 для строк
# len(str(abs(int(x))))==2

# Напишите программу, которая подсчитает и выведет сумму квадратов всех двузначных чисел, делящихся на 9.
# При решении задачи используйте комбинацию функций filter, map, sum.
# Обратите внимание: на 9 должно делиться исходное двузначное число, а не его квадрат.
